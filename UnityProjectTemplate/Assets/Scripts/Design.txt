!! Depenency injection!!
 - Dolezite!!
 - bezne sa pouziva v unity tzv, service locator pattern. Cize niekde si vytvorim instanciu, zaregistrujem ju do lokatora.
   Na inom mieste, kde danu instanciu potrebujem, si ju zoberiem z lokatora. Problem je ze je tazke zarucit poradie tvorby objektov, 
   name v prostredi ako je unity, popripade ked sa prida multithreading, pomaly loading a sietova komunikacia s roznymi sluzbami.
   Lahko sa potom stane ze objekt potrebuje na svoju inicializaciu referenciu z ServiceLocatora, ten ju vsak este nema.
   Injectovanie zavyslosti preto robime zhora, od hlavnych objektov smerom dole. Potrebujeme teda vztupny bod, 
   kde dany objekt vytvorime a zinicializujeme. Tu prichadza Zenject, ktory nam ich pohodlne poskitne v unity.

   JE ZAKAZANE POUZIVAT ZENJECT AKO SERVICE LOCATOR!!

   Zakladne vstupne body su installery. Installer nastavy zavyslosti svojich objektov v danom contexte a potom ich 
   vytvory v spravnom poradi.
   pozname zakladne contexty:
   - Project context - plati pre cely projekt, jeho installery zbehnu pri starte aplikacie, bez ohladu na scenu
   - Scene context - plati pre danu scenu, jeho installery znehnu pri naloadovani sceny
   - Game Object context - plati pre konkretny gameobject, installery zbehnu pri konstrukcii objektu

   Pre objekty kliknute ako prefab do hry pouzivame zenjectbinding na nastavenie bindovania
   Pre dynamicky tvorene objekty z kodu, pouzivame factory - pozri manual na Zenject

Pool
 - pixel.ObjectPool
   - managera zmenit tak aby nebol staticky ale cez instanciu, tu napijit do core installera a nabindovat.
   - ak je jedna isntancia, tak mam cez pooler vzdy pristup na vsetky pooly, ak chcem dva pooly jedneho typu objektu, 
   musim ich pomenovat / identifikovat, co je nevyhoda
 - zenject pool
   - metoda zavolana pri ruse objektu je handy
   - pool sa definuje tam kde ho treba, je pristupny iba tym co sa na neho napoja. Ak chcem dve instancie poolu toho isteho typu, 
   vytvorim ich v inom contexte. Ak ich chcem bindovat z jedneho contextu tak smola, neda sa
   - pool netreba vzdy bindovat, mozem nabibdovat manazera, on uz vie kde pooluje, takze mozem mat napr. ronze pooly na bullety 
   triedene niecoho

Tvorba objektov
 - ako sucast sceny - zenject bind + installer ak treba
 - instancovanie z prefabu - jedna instancia - rucne v kode a nabindovat - bind from isntance, alebo binfrom prefab?
 - pre castejsie menene objekty - factory + pooler (napr. zenject factory ;-) ])
   - napr. rozne zbrane na lodi, powerupy generovane do levelu, ine naboje po upgradnuti zbrane


Co dalej:
- vyriesit pooling
- pridat lokalizacny tool
- pridat google doc loader s lepsim rozhranim ako bol - ako tool do unity, nerobit s nim load priamo do hry
- pridat asteroidy a strelbu na ukazku napojenia - da sa najst v projektoch zenjectu
- rozsirit event agregator o:
        //TODO: pridat register once
        //TODO: register with priority

